(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.timing', [
        '$http', function ($http) {
            return new function () {
                this.getTimezones = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/timing/GetTimezones',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getTimezoneComboboxItems = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/timing/GetTimezoneComboboxItems',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.tenantDashboard', [
        '$http', function ($http) {
            return new function () {
                this.getMemberActivity = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenantDashboard/GetMemberActivity',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.session', [
        '$http', function ($http) {
            return new function () {
                this.getCurrentLoginInformations = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/session/GetCurrentLoginInformations',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.organizationUnit', [
        '$http', function ($http) {
            return new function () {
                this.getOrganizationUnits = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/organizationUnit/GetOrganizationUnits',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.getOrganizationUnitUsers = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/organizationUnit/GetOrganizationUnitUsers',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.createOrganizationUnit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/organizationUnit/CreateOrganizationUnit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.updateOrganizationUnit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/organizationUnit/UpdateOrganizationUnit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.moveOrganizationUnit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/organizationUnit/MoveOrganizationUnit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.deleteOrganizationUnit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/organizationUnit/DeleteOrganizationUnit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.addUserToOrganizationUnit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/organizationUnit/AddUserToOrganizationUnit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.removeUserFromOrganizationUnit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/organizationUnit/RemoveUserFromOrganizationUnit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.isInOrganizationUnit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/organizationUnit/IsInOrganizationUnit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.notification', [
        '$http', function ($http) {
            return new function () {
                this.getUserNotifications = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/notification/GetUserNotifications',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.setAllNotificationsAsRead = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/notification/SetAllNotificationsAsRead',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.setNotificationAsRead = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/notification/SetNotificationAsRead',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getNotificationSettings = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/notification/GetNotificationSettings',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.updateNotificationSettings = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/notification/UpdateNotificationSettings',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.tenant', [
        '$http', function ($http) {
            return new function () {
                this.getTenants = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenant/GetTenants',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.createTenant = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenant/CreateTenant',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getTenantForEdit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenant/GetTenantForEdit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.updateTenant = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenant/UpdateTenant',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.deleteTenant = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenant/DeleteTenant',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getTenantFeaturesForEdit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenant/GetTenantFeaturesForEdit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.updateTenantFeatures = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenant/UpdateTenantFeatures',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.resetTenantSpecificFeatures = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenant/ResetTenantSpecificFeatures',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.unlockTenantAdmin = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenant/UnlockTenantAdmin',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.webLog', [
        '$http', function ($http) {
            return new function () {
                this.getLatestWebLogs = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/webLog/GetLatestWebLogs',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.downloadWebLogs = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/webLog/DownloadWebLogs',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.language', [
        '$http', function ($http) {
            return new function () {
                this.getLanguages = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/language/GetLanguages',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.getLanguageForEdit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/language/GetLanguageForEdit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.createOrUpdateLanguage = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/language/CreateOrUpdateLanguage',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.deleteLanguage = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/language/DeleteLanguage',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.setDefaultLanguage = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/language/SetDefaultLanguage',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getLanguageTexts = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/language/GetLanguageTexts',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.updateLanguageText = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/language/UpdateLanguageText',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.friendship', [
        '$http', function ($http) {
            return new function () {
                this.createFriendshipRequest = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/friendship/CreateFriendshipRequest',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.createFriendshipRequestByUserName = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/friendship/CreateFriendshipRequestByUserName',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.blockUser = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/friendship/BlockUser',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.unblockUser = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/friendship/UnblockUser',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.acceptFriendshipRequest = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/friendship/AcceptFriendshipRequest',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.edition', [
        '$http', function ($http) {
            return new function () {
                this.getEditions = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/edition/GetEditions',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.getEditionForEdit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/edition/GetEditionForEdit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.createOrUpdateEdition = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/edition/CreateOrUpdateEdition',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.deleteEdition = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/edition/DeleteEdition',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getEditionComboboxItems = function (selectedEditionId, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/edition/GetEditionComboboxItems' + abp.utils.buildQueryString([{ name: 'selectedEditionId', value: selectedEditionId }]) + '',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.tenantSettings', [
        '$http', function ($http) {
            return new function () {
                this.getAllSettings = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenantSettings/GetAllSettings',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.updateAllSettings = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenantSettings/UpdateAllSettings',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.clearLogo = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenantSettings/ClearLogo',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.clearCustomCss = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/tenantSettings/ClearCustomCss',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.hostSettings', [
        '$http', function ($http) {
            return new function () {
                this.getAllSettings = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/hostSettings/GetAllSettings',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.updateAllSettings = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/hostSettings/UpdateAllSettings',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.sendTestEmail = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/hostSettings/SendTestEmail',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.commonLookup', [
        '$http', function ($http) {
            return new function () {
                this.getEditionsForCombobox = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/commonLookup/GetEditionsForCombobox',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.findUsers = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/commonLookup/FindUsers',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getDefaultEditionName = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/commonLookup/GetDefaultEditionName',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.chat', [
        '$http', function ($http) {
            return new function () {
                this.getUserChatFriendsWithSettings = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/chat/GetUserChatFriendsWithSettings',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.getUserChatMessages = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/chat/GetUserChatMessages',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.markAllUnreadMessagesOfUserAsRead = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/chat/MarkAllUnreadMessagesOfUserAsRead',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.caching', [
        '$http', function ($http) {
            return new function () {
                this.getAllCaches = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/caching/GetAllCaches',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.clearCache = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/caching/ClearCache',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.clearAllCaches = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/caching/ClearAllCaches',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.userLink', [
        '$http', function ($http) {
            return new function () {
                this.linkToUser = function (linkToUserInput, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/userLink/LinkToUser',
                        method: 'POST',
                        data: JSON.stringify(linkToUserInput)
                    }, httpParams));
                };
                
                this.getLinkedUsers = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/userLink/GetLinkedUsers',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getRecentlyUsedLinkedUsers = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/userLink/GetRecentlyUsedLinkedUsers',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.unlinkUser = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/userLink/UnlinkUser',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.userLogin', [
        '$http', function ($http) {
            return new function () {
                this.getRecentUserLoginAttempts = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/userLogin/GetRecentUserLoginAttempts',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.user', [
        '$http', function ($http) {
            return new function () {
                this.getUsers = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/user/GetUsers',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getUsersToExcel = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/user/GetUsersToExcel',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.getUserForEdit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/user/GetUserForEdit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getUserPermissionsForEdit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/user/GetUserPermissionsForEdit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.resetUserSpecificPermissions = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/user/ResetUserSpecificPermissions',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.updateUserPermissions = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/user/UpdateUserPermissions',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.createOrUpdateUser = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/user/CreateOrUpdateUser',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.deleteUser = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/user/DeleteUser',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.unlockUser = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/user/UnlockUser',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.profile', [
        '$http', function ($http) {
            return new function () {
                this.getCurrentUserProfileForEdit = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/profile/GetCurrentUserProfileForEdit',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
                this.updateCurrentUserProfile = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/profile/UpdateCurrentUserProfile',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.changePassword = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/profile/ChangePassword',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.updateProfilePicture = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/profile/UpdateProfilePicture',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getPasswordComplexitySetting = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/profile/GetPasswordComplexitySetting',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.role', [
        '$http', function ($http) {
            return new function () {
                this.getRoles = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/role/GetRoles',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getRoleForEdit = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/role/GetRoleForEdit',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.createOrUpdateRole = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/role/CreateOrUpdateRole',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.deleteRole = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/role/DeleteRole',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.permission', [
        '$http', function ($http) {
            return new function () {
                this.getAllPermissions = function (httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/permission/GetAllPermissions',
                        method: 'POST',
                        data: JSON.stringify({})
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


(function (abp, angular) {

    if (!angular) {
        return;
    }
    
    var abpModule = angular.module('abp');
    
    abpModule.factory('abp.services.app.auditLog', [
        '$http', function ($http) {
            return new function () {
                this.getAuditLogs = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/auditLog/GetAuditLogs',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
                this.getAuditLogsToExcel = function (input, httpParams) {
                    return $http(angular.extend({
                        url: abp.appPath + 'api/services/app/auditLog/GetAuditLogsToExcel',
                        method: 'POST',
                        data: JSON.stringify(input)
                    }, httpParams));
                };
                
            };
        }
    ]);


})((abp || (abp = {})), (angular || undefined));


