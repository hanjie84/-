(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.timing');

    serviceNamespace.getTimezones = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/timing/GetTimezones',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getTimezoneComboboxItems = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/timing/GetTimezoneComboboxItems',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.tenantDashboard');

    serviceNamespace.getMemberActivity = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenantDashboard/GetMemberActivity',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.session');

    serviceNamespace.getCurrentLoginInformations = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/session/GetCurrentLoginInformations',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.organizationUnit');

    serviceNamespace.getOrganizationUnits = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/organizationUnit/GetOrganizationUnits',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.getOrganizationUnitUsers = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/organizationUnit/GetOrganizationUnitUsers',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.createOrganizationUnit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/organizationUnit/CreateOrganizationUnit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.updateOrganizationUnit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/organizationUnit/UpdateOrganizationUnit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.moveOrganizationUnit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/organizationUnit/MoveOrganizationUnit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.deleteOrganizationUnit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/organizationUnit/DeleteOrganizationUnit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.addUserToOrganizationUnit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/organizationUnit/AddUserToOrganizationUnit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.removeUserFromOrganizationUnit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/organizationUnit/RemoveUserFromOrganizationUnit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.isInOrganizationUnit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/organizationUnit/IsInOrganizationUnit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.notification');

    serviceNamespace.getUserNotifications = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/notification/GetUserNotifications',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.setAllNotificationsAsRead = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/notification/SetAllNotificationsAsRead',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.setNotificationAsRead = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/notification/SetNotificationAsRead',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getNotificationSettings = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/notification/GetNotificationSettings',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.updateNotificationSettings = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/notification/UpdateNotificationSettings',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.tenant');

    serviceNamespace.getTenants = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenant/GetTenants',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.createTenant = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenant/CreateTenant',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getTenantForEdit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenant/GetTenantForEdit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.updateTenant = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenant/UpdateTenant',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.deleteTenant = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenant/DeleteTenant',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getTenantFeaturesForEdit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenant/GetTenantFeaturesForEdit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.updateTenantFeatures = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenant/UpdateTenantFeatures',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.resetTenantSpecificFeatures = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenant/ResetTenantSpecificFeatures',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.unlockTenantAdmin = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenant/UnlockTenantAdmin',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.webLog');

    serviceNamespace.getLatestWebLogs = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/webLog/GetLatestWebLogs',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.downloadWebLogs = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/webLog/DownloadWebLogs',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.language');

    serviceNamespace.getLanguages = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/language/GetLanguages',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.getLanguageForEdit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/language/GetLanguageForEdit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.createOrUpdateLanguage = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/language/CreateOrUpdateLanguage',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.deleteLanguage = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/language/DeleteLanguage',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.setDefaultLanguage = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/language/SetDefaultLanguage',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getLanguageTexts = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/language/GetLanguageTexts',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.updateLanguageText = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/language/UpdateLanguageText',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.friendship');

    serviceNamespace.createFriendshipRequest = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/friendship/CreateFriendshipRequest',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.createFriendshipRequestByUserName = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/friendship/CreateFriendshipRequestByUserName',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.blockUser = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/friendship/BlockUser',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.unblockUser = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/friendship/UnblockUser',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.acceptFriendshipRequest = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/friendship/AcceptFriendshipRequest',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.edition');

    serviceNamespace.getEditions = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/edition/GetEditions',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.getEditionForEdit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/edition/GetEditionForEdit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.createOrUpdateEdition = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/edition/CreateOrUpdateEdition',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.deleteEdition = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/edition/DeleteEdition',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getEditionComboboxItems = function(selectedEditionId, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/edition/GetEditionComboboxItems' + abp.utils.buildQueryString([{ name: 'selectedEditionId', value: selectedEditionId }]) + '',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.tenantSettings');

    serviceNamespace.getAllSettings = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenantSettings/GetAllSettings',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.updateAllSettings = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenantSettings/UpdateAllSettings',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.clearLogo = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenantSettings/ClearLogo',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.clearCustomCss = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/tenantSettings/ClearCustomCss',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.hostSettings');

    serviceNamespace.getAllSettings = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/hostSettings/GetAllSettings',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.updateAllSettings = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/hostSettings/UpdateAllSettings',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.sendTestEmail = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/hostSettings/SendTestEmail',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.commonLookup');

    serviceNamespace.getEditionsForCombobox = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/commonLookup/GetEditionsForCombobox',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.findUsers = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/commonLookup/FindUsers',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getDefaultEditionName = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/commonLookup/GetDefaultEditionName',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.chat');

    serviceNamespace.getUserChatFriendsWithSettings = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/chat/GetUserChatFriendsWithSettings',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.getUserChatMessages = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/chat/GetUserChatMessages',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.markAllUnreadMessagesOfUserAsRead = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/chat/MarkAllUnreadMessagesOfUserAsRead',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.caching');

    serviceNamespace.getAllCaches = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/caching/GetAllCaches',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.clearCache = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/caching/ClearCache',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.clearAllCaches = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/caching/ClearAllCaches',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.userLink');

    serviceNamespace.linkToUser = function(linkToUserInput, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/userLink/LinkToUser',
            type: 'POST',
            data: JSON.stringify(linkToUserInput)
        }, ajaxParams));
    };

    serviceNamespace.getLinkedUsers = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/userLink/GetLinkedUsers',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getRecentlyUsedLinkedUsers = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/userLink/GetRecentlyUsedLinkedUsers',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.unlinkUser = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/userLink/UnlinkUser',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.userLogin');

    serviceNamespace.getRecentUserLoginAttempts = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/userLogin/GetRecentUserLoginAttempts',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.user');

    serviceNamespace.getUsers = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/user/GetUsers',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getUsersToExcel = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/user/GetUsersToExcel',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.getUserForEdit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/user/GetUserForEdit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getUserPermissionsForEdit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/user/GetUserPermissionsForEdit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.resetUserSpecificPermissions = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/user/ResetUserSpecificPermissions',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.updateUserPermissions = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/user/UpdateUserPermissions',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.createOrUpdateUser = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/user/CreateOrUpdateUser',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.deleteUser = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/user/DeleteUser',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.unlockUser = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/user/UnlockUser',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.profile');

    serviceNamespace.getCurrentUserProfileForEdit = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/profile/GetCurrentUserProfileForEdit',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };

    serviceNamespace.updateCurrentUserProfile = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/profile/UpdateCurrentUserProfile',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.changePassword = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/profile/ChangePassword',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.updateProfilePicture = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/profile/UpdateProfilePicture',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getPasswordComplexitySetting = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/profile/GetPasswordComplexitySetting',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.role');

    serviceNamespace.getRoles = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/role/GetRoles',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getRoleForEdit = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/role/GetRoleForEdit',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.createOrUpdateRole = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/role/CreateOrUpdateRole',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.deleteRole = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/role/DeleteRole',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.permission');

    serviceNamespace.getAllPermissions = function(ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/permission/GetAllPermissions',
            type: 'POST',
            data: JSON.stringify({})
        }, ajaxParams));
    };


})();


(function(){

    var serviceNamespace = abp.utils.createNamespace(abp, 'services.app.auditLog');

    serviceNamespace.getAuditLogs = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/auditLog/GetAuditLogs',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };

    serviceNamespace.getAuditLogsToExcel = function(input, ajaxParams) {
        return abp.ajax($.extend({
            url: abp.appPath + 'api/services/app/auditLog/GetAuditLogsToExcel',
            type: 'POST',
            data: JSON.stringify(input)
        }, ajaxParams));
    };


})();


